{"version":3,"sources":["../src/lib/ai/AIContext.tsx","../src/lib/ai/AIProvider.tsx","../src/lib/ai/utils/sse.ts","../src/lib/ai/clients/openai.ts","../src/lib/ai/clients/groq.ts","../src/lib/ai/useAI.ts","../src/components/ui/Button.tsx","../src/components/ui/Card.tsx","../src/components/ChatBox/ChatBox.tsx","../src/components/Summarizer/Summarizer.tsx","../src/components/Translator/Translator.tsx","../src/components/Rewriter/Rewriter.tsx","../src/index.ts"],"sourcesContent":["import React, { createContext, useContext } from \"react\";\r\nimport type { AIClient } from \"./types\";\r\n\r\n/* eslint-disable react-refresh/only-export-components */\r\n\r\nexport type ProviderName = \"openai\" | \"groq\";\r\n\r\nexport type AIContextType = {\r\n  client: AIClient;\r\n\r\n  fallback?: AIClient;\r\n\r\n  defaultModel: string;\r\n\r\n  provider: ProviderName;\r\n\r\n  setProvider: (p: ProviderName) => void;\r\n};\r\n\r\nexport const AIContext = createContext<AIContextType | null>(null);\r\n\r\nexport const AIProviderBase: React.FC<\r\n  React.PropsWithChildren<{ value: AIContextType }>\r\n> = ({ value, children }) => {\r\n  return React.createElement(AIContext.Provider, { value }, children);\r\n};\r\n\r\nexport function useAIContext(): AIContextType {\r\n  const ctx = useContext(AIContext);\r\n  if (!ctx) throw new Error(\"useAIContext must be used inside <AIProvider>\");\r\n  return ctx;\r\n}\r\n","import React, { useMemo, useState } from \"react\";\r\nimport type { PropsWithChildren } from \"react\";\r\n\r\nimport { AIContext, type AIContextType, type ProviderName } from \"./AIContext\";\r\nimport type { AIClient } from \"./types\";\r\nimport { OpenAIClient } from \"./clients/openai\";\r\nimport { GroqClient } from \"./clients/groq\";\r\n\r\nconst AIProvider: React.FC<PropsWithChildren> = ({ children }) => {\r\n  const [provider, setProvider] = useState<ProviderName>(\"openai\");\r\n\r\n  const openaiKey = import.meta.env.VITE_OPENAI_KEY as string | undefined;\r\n  const groqKey = import.meta.env.VITE_GROQ_KEY as string | undefined;\r\n\r\n  const value = useMemo<AIContextType>(() => {\r\n    const openai = openaiKey ? new OpenAIClient(openaiKey) : null;\r\n    const groq = groqKey ? new GroqClient(groqKey) : null;\r\n\r\n    const active: AIClient | null =\r\n      provider === \"groq\" ? groq ?? openai : openai ?? groq;\r\n\r\n    const backup: AIClient | undefined =\r\n      provider === \"groq\" ? openai ?? undefined : groq ?? undefined;\r\n\r\n    const defaultModel =\r\n      provider === \"groq\" ? \"llama-3.1-8b-instant\" : \"gpt-4o-mini\";\r\n\r\n    if (!active) {\r\n      throw new Error(\r\n        \"No AI client configured. Provide VITE_OPENAI_KEY or VITE_GROQ_KEY.\"\r\n      );\r\n    }\r\n\r\n    return {\r\n      client: active,\r\n      fallback: backup,\r\n      defaultModel,\r\n      provider,\r\n      setProvider,\r\n    };\r\n  }, [provider, openaiKey, groqKey]);\r\n\r\n  return <AIContext.Provider value={value}>{children}</AIContext.Provider>;\r\n};\r\n\r\nexport default AIProvider;\r\n","export async function readOpenAISSE(\r\n  res: Response,\r\n  onDelta: (chunk: string) => void\r\n): Promise<string> {\r\n  const reader = res.body!.getReader();\r\n  const decoder = new TextDecoder(\"utf-8\");\r\n  let buffer = \"\";\r\n  let full = \"\";\r\n\r\n  while (true) {\r\n    const { done, value } = await reader.read();\r\n    if (done) break;\r\n    buffer += decoder.decode(value, { stream: true });\r\n\r\n    for (const line of buffer.split(\"\\n\")) {\r\n      if (!line) continue;\r\n      if (line.startsWith(\"data: \")) {\r\n        const payload = line.slice(6).trim();\r\n        if (payload === \"[DONE]\") {\r\n          buffer = \"\";\r\n          break;\r\n        }\r\n        try {\r\n          const json = JSON.parse(payload);\r\n          const delta: string =\r\n            json.choices?.[0]?.delta?.content ??\r\n            json.choices?.[0]?.message?.content ??\r\n            json.choices?.[0]?.text ??\r\n            \"\";\r\n          if (delta) {\r\n            full += delta;\r\n            onDelta(delta);\r\n          }\r\n        } catch {\r\n          /* ignore malformed chunk */\r\n        }\r\n      }\r\n    }\r\n\r\n    buffer = buffer.endsWith(\"\\n\") ? \"\" : buffer.split(\"\\n\").at(-1) ?? \"\";\r\n  }\r\n\r\n  return full;\r\n}\r\n","import type { AIClient, AIMessage } from \"../types\";\r\nimport { readOpenAISSE } from \"../utils/sse\";\r\n\r\nexport class OpenAIClient implements AIClient {\r\n  name = \"openai\" as const;\r\n  private apiKey: string;\r\n  private baseUrl = \"https://api.openai.com/v1\";\r\n\r\n  constructor(apiKey: string) {\r\n    this.apiKey = apiKey;\r\n  }\r\n\r\n  private headers(stream = false) {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${this.apiKey}`,\r\n      ...(stream ? { Accept: \"text/event-stream\" } : {}),\r\n    };\r\n  }\r\n\r\n  async generate(opts: {\r\n    model: string;\r\n    prompt: string;\r\n    temperature?: number;\r\n  }) {\r\n    const res = await fetch(`${this.baseUrl}/chat/completions`, {\r\n      method: \"POST\",\r\n      headers: this.headers(false),\r\n      body: JSON.stringify({\r\n        model: opts.model,\r\n        temperature: opts.temperature ?? 0.7,\r\n        messages: [{ role: \"user\", content: opts.prompt }],\r\n      }),\r\n    });\r\n    if (!res.ok) throw new Error(await res.text());\r\n    const json = await res.json();\r\n    return json.choices?.[0]?.message?.content ?? \"\";\r\n  }\r\n\r\n  async chat(opts: {\r\n    model: string;\r\n    messages: AIMessage[];\r\n    temperature?: number;\r\n  }) {\r\n    const res = await fetch(`${this.baseUrl}/chat/completions`, {\r\n      method: \"POST\",\r\n      headers: this.headers(false),\r\n      body: JSON.stringify({\r\n        model: opts.model,\r\n        temperature: opts.temperature ?? 0.7,\r\n        messages: opts.messages,\r\n      }),\r\n    });\r\n    if (!res.ok) throw new Error(await res.text());\r\n    const json = await res.json();\r\n    return json.choices?.[0]?.message?.content ?? \"\";\r\n  }\r\n\r\n  async streamGenerate(\r\n    prompt: string,\r\n    handlers: {\r\n      onToken?: (t: string) => void;\r\n      onDone?: (final: string) => void;\r\n    },\r\n    opts?: { model: string; temperature?: number }\r\n  ) {\r\n    const res = await fetch(`${this.baseUrl}/chat/completions`, {\r\n      method: \"POST\",\r\n      headers: this.headers(true),\r\n      body: JSON.stringify({\r\n        model: opts?.model ?? \"gpt-4o-mini\",\r\n        temperature: opts?.temperature ?? 0.7,\r\n        messages: [{ role: \"user\", content: prompt }],\r\n        stream: true,\r\n      }),\r\n    });\r\n    if (!res.ok) throw new Error(await res.text());\r\n\r\n    const full = await readOpenAISSE(res, (chunk) => handlers.onToken?.(chunk));\r\n    handlers.onDone?.(full);\r\n  }\r\n}\r\n","import type { AIClient, AIMessage } from \"../types\";\r\nimport { readOpenAISSE } from \"../utils/sse\";\r\n\r\nexport class GroqClient implements AIClient {\r\n  name = \"groq\" as const;\r\n  private apiKey: string;\r\n  private baseUrl = \"https://api.groq.com/openai/v1\";\r\n\r\n  constructor(apiKey: string) {\r\n    this.apiKey = apiKey;\r\n  }\r\n\r\n  private headers(stream = false) {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${this.apiKey}`,\r\n      ...(stream ? { Accept: \"text/event-stream\" } : {}),\r\n    };\r\n  }\r\n\r\n  private mapModel(model: string) {\r\n    return model.startsWith(\"gpt\") || model.startsWith(\"o1\")\r\n      ? \"llama-3.1-8b-instant\"\r\n      : model;\r\n  }\r\n\r\n  async generate(opts: {\r\n    model: string;\r\n    prompt: string;\r\n    temperature?: number;\r\n  }) {\r\n    const res = await fetch(`${this.baseUrl}/chat/completions`, {\r\n      method: \"POST\",\r\n      headers: this.headers(false),\r\n      body: JSON.stringify({\r\n        model: this.mapModel(opts.model),\r\n        temperature: opts.temperature ?? 0.7,\r\n        messages: [{ role: \"user\", content: opts.prompt }],\r\n      }),\r\n    });\r\n    if (!res.ok) throw new Error(await res.text());\r\n    const json = await res.json();\r\n    return json.choices?.[0]?.message?.content ?? \"\";\r\n  }\r\n\r\n  async chat(opts: {\r\n    model: string;\r\n    messages: AIMessage[];\r\n    temperature?: number;\r\n  }) {\r\n    const res = await fetch(`${this.baseUrl}/chat/completions`, {\r\n      method: \"POST\",\r\n      headers: this.headers(false),\r\n      body: JSON.stringify({\r\n        model: this.mapModel(opts.model),\r\n        temperature: opts.temperature ?? 0.7,\r\n        messages: opts.messages,\r\n      }),\r\n    });\r\n    if (!res.ok) throw new Error(await res.text());\r\n    const json = await res.json();\r\n    return json.choices?.[0]?.message?.content ?? \"\";\r\n  }\r\n\r\n  async streamGenerate(\r\n    prompt: string,\r\n    handlers: {\r\n      onToken?: (t: string) => void;\r\n      onDone?: (final: string) => void;\r\n    },\r\n    opts?: { model: string; temperature?: number }\r\n  ) {\r\n    const res = await fetch(`${this.baseUrl}/chat/completions`, {\r\n      method: \"POST\",\r\n      headers: this.headers(true),\r\n      body: JSON.stringify({\r\n        model: this.mapModel(opts?.model ?? \"llama-3.1-8b-instant\"),\r\n        temperature: opts?.temperature ?? 0.7,\r\n        messages: [{ role: \"user\", content: prompt }],\r\n        stream: true,\r\n      }),\r\n    });\r\n    if (!res.ok) throw new Error(await res.text());\r\n\r\n    const full = await readOpenAISSE(res, (chunk) => handlers.onToken?.(chunk));\r\n    handlers.onDone?.(full);\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport type { AIMessage } from \"./types\";\r\nimport { useAIContext } from \"./AIContext\";\r\n\r\nexport function useAI(defaultModel?: string) {\r\n  const {\r\n    client,\r\n    fallback,\r\n    defaultModel: ctxModel,\r\n    provider,\r\n    setProvider,\r\n  } = useAIContext();\r\n  const model = defaultModel ?? ctxModel;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  async function withFallback<T>(\r\n    fn: (c: typeof client) => Promise<T>\r\n  ): Promise<T> {\r\n    try {\r\n      return await fn(client);\r\n    } catch (e: unknown) {\r\n      const message =\r\n        e instanceof Error ? e.message : String(e ?? \"Unknown error\");\r\n\r\n      if (fallback && provider === \"openai\") {\r\n        const shouldFallback = /429|401|5\\d\\d|rate|quota|network|fetch/i.test(\r\n          message\r\n        );\r\n        if (shouldFallback) {\r\n          setProvider(\"groq\");\r\n          setError(\"falling back to groq ai provider\");\r\n          return await fn(fallback);\r\n        }\r\n      }\r\n\r\n      throw e instanceof Error ? e : new Error(String(e));\r\n    }\r\n  }\r\n\r\n  async function chat(messages: AIMessage[], temperature = 0.7) {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      return await withFallback((c) =>\r\n        c.chat({ model, messages, temperature })\r\n      );\r\n    } catch (e: unknown) {\r\n      setError(e instanceof Error ? e.message : String(e ?? \"Unknown error\"));\r\n      return \"\";\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function generate(prompt: string, temperature = 0.7) {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      return await withFallback((c) =>\r\n        c.generate({ model, prompt, temperature })\r\n      );\r\n    } catch (e: unknown) {\r\n      setError(e instanceof Error ? e.message : String(e ?? \"Unknown error\"));\r\n      return \"\";\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function streamGenerate(\r\n    prompt: string,\r\n    handlers: {\r\n      onToken?: (t: string) => void;\r\n      onDone?: (final: string) => void;\r\n    },\r\n    temperature = 0.7\r\n  ) {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await withFallback((c) =>\r\n        c.streamGenerate(prompt, handlers, { model, temperature })\r\n      );\r\n    } catch (e: unknown) {\r\n      setError(e instanceof Error ? e.message : String(e ?? \"Unknown error\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return {\r\n    chat,\r\n    generate,\r\n    streamGenerate,\r\n\r\n    loading,\r\n    error,\r\n    provider,\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\ntype Props = React.PropsWithChildren<{\r\n  className?: string;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n  type?: \"button\" | \"submit\";\r\n}>;\r\n\r\nexport const Button: React.FC<Props> = ({\r\n  className,\r\n  disabled,\r\n  onClick,\r\n  type = \"button\",\r\n  children,\r\n}) => (\r\n  <button\r\n    type={type}\r\n    onClick={onClick}\r\n    disabled={disabled}\r\n    className={clsx(\r\n      \"rounded-xl px-4 py-2 text-sm font-medium transition-colors cursor-pointer\",\r\n      \"bg-indigo-500 text-white hover:bg-indigo-600\",\r\n      \"dark:bg-indigo-400 dark:hover:bg-indigo-500\",\r\n      \"disabled:opacity-50 disabled:cursor-not-allowed\",\r\n      className\r\n    )}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n","import React from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\ntype CardProps = { children: React.ReactNode; className?: string };\r\n\r\nexport const Card: React.FC<CardProps> = ({ children, className = \"\" }) => {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        \"rounded-2xl border border-slate-200 bg-white p-4 shadow-sm\",\r\n        \"dark:border-slate-700 dark:bg-slate-900\",\r\n        className\r\n      )}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useRef, useState } from \"react\";\r\n\r\nimport type { AIMessage } from \"../../lib/ai/types\";\r\nimport { useAI } from \"../../lib/ai/useAI\";\r\n\r\nimport { Button } from \"../ui/Button\";\r\nimport { Card } from \"../ui/Card\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nexport const ChatBox: React.FC = () => {\r\n  const { chat, loading, error, provider } = useAI();\r\n  const [messages, setMessages] = useState<AIMessage[]>([]);\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const endRef = useRef<HTMLDivElement>(null);\r\n\r\n  const system = useMemo<AIMessage>(\r\n    () => ({ role: \"system\", content: \"You are a helpful assistant.\" }),\r\n    []\r\n  );\r\n\r\n  async function send() {\r\n    const text = input.trim();\r\n    if (!text) return;\r\n\r\n    const next = [...messages, { role: \"user\", content: text } as AIMessage];\r\n    setInput(\"\");\r\n\r\n    const reply = await chat([system, ...next]);\r\n    setMessages([...next, { role: \"assistant\", content: reply }]);\r\n\r\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  return (\r\n    <Card className=\"space-y-4\">\r\n      <div className=\"flex items-center gap-2\">\r\n        <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">\r\n          💬 ChatBox\r\n        </h3>\r\n      </div>\r\n\r\n      <div\r\n        className={clsx(\r\n          \"w-full min-h-40 max-h-112 overflow-auto rounded-xl border p-3 text-sm\",\r\n          \"border-slate-200 bg-slate-50\",\r\n          \"dark:border-slate-700 dark:bg-slate-900 dark:text-slate-100\"\r\n        )}\r\n      >\r\n        {messages.length === 0 && (\r\n          <div className=\"text-slate-500 dark:text-slate-400\">\r\n            Start the conversation\r\n          </div>\r\n        )}\r\n\r\n        {messages.map((m, i) => (\r\n          <div\r\n            key={i}\r\n            className={clsx(\r\n              \"mb-2 flex\",\r\n              m.role === \"user\" ? \"justify-end\" : \"justify-start\"\r\n            )}\r\n          >\r\n            <div\r\n              className={clsx(\r\n                \"max-w-[80%] rounded-2xl px-3 py-2 shadow-sm whitespace-pre-wrap wrap-break-wordbreak-words\",\r\n                m.role === \"user\"\r\n                  ? \"bg-indigo-600 text-white dark:bg-indigo-500\"\r\n                  : \"bg-white text-slate-900 border border-slate-200 dark:bg-slate-800 dark:text-slate-100 dark:border-slate-700\"\r\n              )}\r\n            >\r\n              {m.content}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        <div ref={endRef} />\r\n      </div>\r\n\r\n      <div className=\"flex w-full gap-2\">\r\n        <input\r\n          aria-label=\"Type a message\"\r\n          className={clsx(\r\n            \"flex-1 rounded-xl border px-3 py-2 text-sm outline-none\",\r\n            \"placeholder:text-slate-400\",\r\n            \"border-slate-300 bg-white focus:ring-2 focus:ring-indigo-500 text-slate-900\",\r\n            \"dark:border-slate-700 dark:bg-slate-900 dark:text-slate-100 dark:placeholder:text-slate-500 dark:focus:ring-indigo-400\"\r\n          )}\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n              e.preventDefault();\r\n              send();\r\n            }\r\n          }}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n\r\n        <Button disabled={loading || input.trim().length === 0} onClick={send}>\r\n          {loading ? \"…\" : \"Send\"}\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-3\">\r\n        {provider && (\r\n          <span className=\"rounded-full border border-slate-200 bg-slate-100 px-3 py-1 text-xs text-slate-700 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-300\">\r\n            via {provider}\r\n          </span>\r\n        )}\r\n        {error && <p className=\"text-xs text-slate-400\">{error}</p>}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useAI } from \"../../lib/ai/useAI\";\r\n\r\nimport { Button } from \"../ui/Button\";\r\nimport { Card } from \"../ui/Card\";\r\n\r\nexport const Summarizer: React.FC = () => {\r\n  const { streamGenerate, loading, error, provider } = useAI();\r\n\r\n  const [src, setSrc] = useState(\"\");\r\n\r\n  const [out, setOut] = useState(\"\");\r\n\r\n  const [style, setStyle] = useState(\"Bulleted\");\r\n\r\n  const [lang, setLang] = useState(\"English\");\r\n\r\n  function buildPrompt(text: string, language: string, format: string) {\r\n    return [\r\n      `You are a professional text summarizer that produces ${format.toLowerCase()} summaries in ${language}.`,\r\n      \"Rules:\",\r\n      \"- Preserve meaning and tone.\",\r\n      \"- Avoid changing facts.\",\r\n      \"- Keep formatting consistent (Markdown allowed).\",\r\n      \"- Use bullet points if requested.\",\r\n      \"- Output only the summary text.\",\r\n      \"\",\r\n      \"Text:\",\r\n      text,\r\n    ].join(\"\\n\");\r\n  }\r\n\r\n  async function run() {\r\n    setOut(\"\");\r\n    const prompt = buildPrompt(src, lang, style);\r\n    await streamGenerate(prompt, {\r\n      onToken: (t) => setOut((p) => p + t),\r\n      onDone: (final) => setOut(final),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card className=\"space-y-4\">\r\n      <div className=\"flex flex-wrap items-center gap-2\">\r\n        <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">\r\n          📝 Summarizer\r\n        </h3>\r\n\r\n        <div className=\"ml-auto flex items-center gap-2\">\r\n          <select\r\n            title=\"selectSummizer\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={lang}\r\n            onChange={(e) => setLang(e.target.value)}\r\n          >\r\n            {[\r\n              \"Ukrainian\",\r\n              \"English\",\r\n              \"Polish\",\r\n              \"German\",\r\n              \"Spanish\",\r\n              \"French\",\r\n              \"Italian\",\r\n              \"Portuguese\",\r\n              \"Russian\",\r\n              \"Turkish\",\r\n            ].map((l) => (\r\n              <option key={l} value={l}>\r\n                {l}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <select\r\n            title=\"selectSummizer\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={style}\r\n            onChange={(e) => setStyle(e.target.value)}\r\n          >\r\n            <option value=\"Bulleted\">Bulleted</option>\r\n            <option value=\"Paragraph\">Paragraph</option>\r\n            <option value=\"Compact\">Compact</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <textarea\r\n        className=\"h-40 w-full resize-none rounded-xl border p-3 text-sm\r\n                   border-slate-300 bg-white text-slate-900 placeholder:text-slate-400\r\n                   dark:border-slate-700 dark:bg-slate-900 dark:text-slate-100 dark:placeholder:text-slate-500\"\r\n        placeholder=\"Paste text here…\"\r\n        value={src}\r\n        onChange={(e) => setSrc(e.target.value)}\r\n      />\r\n\r\n      <div className=\"flex items-center gap-2\">\r\n        <Button disabled={loading || !src.trim()} onClick={run}>\r\n          {loading ? \"…\" : \"Summarize\"}\r\n        </Button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"min-h-16 w-full whitespace-pre-wrap rounded-xl border p-3 text-sm\r\n                      border-slate-200 bg-white/70 text-slate-900\r\n                      dark:border-slate-700 dark:bg-slate-900/60 dark:text-slate-100\"\r\n      >\r\n        {out || \"Output will appear here\"}\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-3\">\r\n        {provider && (\r\n          <span className=\"rounded-full border border-slate-200 bg-slate-100 px-3 py-1 text-xs text-slate-700 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-300\">\r\n            via {provider}\r\n          </span>\r\n        )}\r\n        {error && <p className=\"text-xs text-slate-400\">{error}</p>}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { useAI } from \"../../lib/ai/useAI\";\r\n\r\nimport { Button } from \"../ui/Button\";\r\nimport { Card } from \"../ui/Card\";\r\n\r\nfunction buildPrompt(text: string, from: string, to: string) {\r\n  return [\r\n    `You are a precise translator from ${from} to ${to}.`,\r\n    \"Rules:\",\r\n    \"- Respond strictly in the target language.\",\r\n    \"- Preserve meaning, tone, and named entities.\",\r\n    \"- Keep emojis, punctuation, and Markdown structure.\",\r\n    \"- Do NOT translate code, URLs, or domain names.\",\r\n    \"- Keep line breaks and formatting.\",\r\n    \"\",\r\n    \"Text:\",\r\n    text,\r\n  ].join(\"\\n\");\r\n}\r\n\r\nexport const Translator: React.FC = () => {\r\n  const { streamGenerate, loading, error, provider } = useAI();\r\n\r\n  const [from, setFrom] = useState(\"Ukrainian\");\r\n\r\n  const [to, setTo] = useState(\"English\");\r\n\r\n  const [src, setSrc] = useState(\"\");\r\n\r\n  const [out, setOut] = useState(\"\");\r\n\r\n  async function run() {\r\n    setOut(\"\");\r\n    const prompt = buildPrompt(src, from, to);\r\n    await streamGenerate(prompt, {\r\n      onToken: (t) => setOut((p) => p + t),\r\n      onDone: (final) => setOut(final),\r\n    });\r\n  }\r\n\r\n  function swap() {\r\n    setFrom(to);\r\n    setTo(from);\r\n    if (out) setSrc(out);\r\n    setOut(\"\");\r\n  }\r\n\r\n  const langs = [\r\n    \"Ukrainian\",\r\n    \"English\",\r\n    \"Polish\",\r\n    \"German\",\r\n    \"Spanish\",\r\n    \"French\",\r\n    \"Italian\",\r\n    \"Portuguese\",\r\n    \"Russian\",\r\n    \"Turkish\",\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"space-y-4\">\r\n      <div className=\"flex flex-wrap items-center gap-2\">\r\n        <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">\r\n          🌐 Translator\r\n        </h3>\r\n\r\n        <div className=\"ml-auto flex items-center gap-2\">\r\n          <select\r\n            title=\"selectTranslator\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={from}\r\n            onChange={(e) => setFrom(e.target.value)}\r\n          >\r\n            {langs.map((l) => (\r\n              <option key={`f-${l}`} value={l}>\r\n                {l}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"rounded-full border px-3 py-1 text-sm\r\n                       border-slate-300 bg-white hover:bg-slate-50 text-slate-900\r\n                       dark:border-slate-700 dark:bg-slate-900 dark:text-slate-100 dark:hover:bg-slate-800\"\r\n            onClick={swap}\r\n            title=\"Swap languages\"\r\n          >\r\n            ⇄\r\n          </button>\r\n\r\n          <select\r\n            title=\"selectTranslator\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={to}\r\n            onChange={(e) => setTo(e.target.value)}\r\n          >\r\n            {langs.map((l) => (\r\n              <option key={`t-${l}`} value={l}>\r\n                {l}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <textarea\r\n        className=\"h-40 w-full resize-none rounded-xl border p-3 text-sm\r\n                   border-slate-300 bg-white text-slate-900 placeholder:text-slate-400\r\n                   dark:border-slate-700 dark:bg-slate-900 dark:text-slate-100 dark:placeholder:text-slate-500\"\r\n        placeholder=\"Type or paste text…\"\r\n        value={src}\r\n        onChange={(e) => setSrc(e.target.value)}\r\n      />\r\n\r\n      <div className=\"flex items-center gap-2\">\r\n        <Button disabled={!src.trim() || loading} onClick={run}>\r\n          {loading ? \"…\" : \"Translate\"}\r\n        </Button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"min-h-16 w-full whitespace-pre-wrap rounded-xl border p-3 text-sm\r\n                      border-slate-200 bg-white/70 text-slate-900\r\n                      dark:border-slate-700 dark:bg-slate-900/60 dark:text-slate-100\"\r\n      >\r\n        {out || \"Output will appear here\"}\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-3\">\r\n        {provider && (\r\n          <span className=\"rounded-full border border-slate-200 bg-slate-100 px-3 py-1 text-xs text-slate-700 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-300\">\r\n            via {provider}\r\n          </span>\r\n        )}\r\n        {error && <p className=\"text-xs text-slate-400\">{error}</p>}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\n\r\nimport { useAI } from \"../../lib/ai/useAI\";\r\n\r\nimport { Button } from \"../ui/Button\";\r\nimport { Card } from \"../ui/Card\";\r\n\r\ntype Tone =\r\n  | \"neutral\"\r\n  | \"formal\"\r\n  | \"casual\"\r\n  | \"friendly\"\r\n  | \"professional\"\r\n  | \"confident\";\r\n\r\ntype Length = \"shorter\" | \"same\" | \"longer\";\r\n\r\ntype Creativity = \"low\" | \"medium\" | \"high\";\r\n\r\nfunction buildPrompt(\r\n  text: string,\r\n  opts: {\r\n    tone: Tone;\r\n    length: Length;\r\n    creativity: Creativity;\r\n    targetLanguage?: string | \"auto\";\r\n  }\r\n) {\r\n  const toneLine: Record<Tone, string> = {\r\n    neutral: \"Use a clear, neutral tone.\",\r\n    formal:\r\n      \"Use a formal, concise tone suitable for business/academic contexts.\",\r\n    casual: \"Use a casual, conversational tone.\",\r\n    friendly: \"Use a warm, friendly and empathetic tone.\",\r\n    professional: \"Use a professional tone with precise wording.\",\r\n    confident: \"Use a confident, assertive tone.\",\r\n  };\r\n  const lengthLine: Record<Length, string> = {\r\n    shorter: \"Make the text shorter while preserving all key meaning.\",\r\n    same: \"Keep approximately the same length.\",\r\n    longer: \"Expand the text slightly by adding clarifying details.\",\r\n  };\r\n  const creativityLine: Record<Creativity, string> = {\r\n    low: \"Be conservative. Avoid creative changes; keep structure close to the original.\",\r\n    medium: \"Allow moderate rephrasing to improve clarity and flow.\",\r\n    high: \"Allow creative rephrasing while strictly preserving facts and intent.\",\r\n  };\r\n  const langLine =\r\n    !opts.targetLanguage || opts.targetLanguage === \"auto\"\r\n      ? \"Keep the original language.\"\r\n      : `Write the final result in ${opts.targetLanguage}.`;\r\n\r\n  return [\r\n    \"You are an expert text rewriter.\",\r\n    toneLine[opts.tone],\r\n    lengthLine[opts.length],\r\n    creativityLine[opts.creativity],\r\n    langLine,\r\n    \"\",\r\n    \"Hard rules:\",\r\n    \"- Preserve meaning, facts, numbers, units, named entities.\",\r\n    \"- Preserve Markdown structure (headers, lists, tables).\",\r\n    \"- Do NOT translate or alter code blocks, inline code, URLs, or file paths.\",\r\n    \"- Keep emojis and punctuation where appropriate.\",\r\n    \"- Maintain paragraph and line break structure unless clarity requires change.\",\r\n    \"\",\r\n    \"Rewrite the following text accordingly:\",\r\n    text,\r\n  ].join(\"\\n\");\r\n}\r\n\r\nexport const Rewriter: React.FC = () => {\r\n  const { streamGenerate, loading, error, provider } = useAI();\r\n\r\n  const [tone, setTone] = useState<Tone>(\"neutral\");\r\n\r\n  const [length, setLength] = useState<Length>(\"same\");\r\n\r\n  const [creativity, setCreativity] = useState<Creativity>(\"medium\");\r\n\r\n  const [lang, setLang] = useState<string | \"auto\">(\"auto\");\r\n\r\n  const [src, setSrc] = useState(\"\");\r\n\r\n  const [out, setOut] = useState(\"\");\r\n\r\n  const canRun = useMemo(() => src.trim().length > 0, [src]);\r\n\r\n  async function run() {\r\n    setOut(\"\");\r\n    const prompt = buildPrompt(src, {\r\n      tone,\r\n      length,\r\n      creativity,\r\n      targetLanguage: lang,\r\n    });\r\n    await streamGenerate(prompt, {\r\n      onToken: (t) => setOut((p) => p + t),\r\n      onDone: (final) => setOut(final),\r\n    });\r\n  }\r\n\r\n  const langs = [\r\n    \"auto\",\r\n    \"Ukrainian\",\r\n    \"English\",\r\n    \"Polish\",\r\n    \"German\",\r\n    \"Spanish\",\r\n    \"French\",\r\n    \"Italian\",\r\n    \"Portuguese\",\r\n    \"Russian\",\r\n    \"Turkish\",\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"space-y-4\">\r\n      <div className=\"flex flex-wrap items-center gap-2\">\r\n        <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">\r\n          ✍️ Rewriter\r\n        </h3>\r\n\r\n        <div className=\"ml-auto flex flex-wrap items-center gap-2\">\r\n          <select\r\n            title=\"selectRewriter\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={tone}\r\n            onChange={(e) => setTone(e.target.value as Tone)}\r\n          >\r\n            {[\r\n              \"neutral\",\r\n              \"formal\",\r\n              \"casual\",\r\n              \"friendly\",\r\n              \"professional\",\r\n              \"confident\",\r\n            ].map((t) => (\r\n              <option key={t} value={t}>\r\n                {t[0].toUpperCase() + t.slice(1)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <select\r\n            title=\"selectRewriter\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={length}\r\n            onChange={(e) => setLength(e.target.value as Length)}\r\n          >\r\n            <option value=\"shorter\">Shorter</option>\r\n            <option value=\"same\">Same length</option>\r\n            <option value=\"longer\">Longer</option>\r\n          </select>\r\n\r\n          <select\r\n            title=\"selectRewriter\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={creativity}\r\n            onChange={(e) => setCreativity(e.target.value as Creativity)}\r\n          >\r\n            <option value=\"low\">Creativity: Low</option>\r\n            <option value=\"medium\">Creativity: Medium</option>\r\n            <option value=\"high\">Creativity: High</option>\r\n          </select>\r\n\r\n          <select\r\n            title=\"selectRewriter\"\r\n            className=\"rounded-xl border px-3 py-2 text-sm bg-white text-slate-900 border-slate-300 dark:bg-slate-900 dark:text-slate-100 dark:border-slate-700\"\r\n            value={lang}\r\n            onChange={(e) => setLang(e.target.value)}\r\n          >\r\n            {langs.map((l) => (\r\n              <option key={l} value={l}>\r\n                {l}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <textarea\r\n        className=\"h-44 w-full resize-none rounded-xl border p-3 text-sm\r\n                   border-slate-300 bg-white text-slate-900 placeholder:text-slate-400\r\n                   dark:border-slate-700 dark:bg-slate-900 dark:text-slate-100 dark:placeholder:text-slate-500\"\r\n        placeholder=\"Paste text to rewrite…\"\r\n        value={src}\r\n        onChange={(e) => setSrc(e.target.value)}\r\n      />\r\n\r\n      <div className=\"flex items-center gap-2\">\r\n        <Button disabled={!canRun || loading} onClick={run}>\r\n          {loading ? \"…\" : \"Rewrite\"}\r\n        </Button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"min-h-16 w-full whitespace-pre-wrap rounded-xl border p-3 text-sm\r\n                      border-slate-200 bg-white/70 text-slate-900\r\n                      dark:border-slate-700 dark:bg-slate-900/60 dark:text-slate-100\"\r\n      >\r\n        {out || \"Output will appear here\"}\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-3\">\r\n        {provider && (\r\n          <span className=\"rounded-full border border-slate-200 bg-slate-100 px-3 py-1 text-xs text-slate-700 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-300\">\r\n            via {provider}\r\n          </span>\r\n        )}\r\n        {error && <p className=\"text-xs text-slate-400\">{error}</p>}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","export * from \"./lib/ai/types\";\r\nexport * from \"./lib/ai/AIContext\";\r\nexport * from \"./lib/ai/AIProvider\";\r\nexport * from \"./lib/ai/useAI\";\r\n\r\nexport * from \"./lib/ai/clients/openai\";\r\nexport * from \"./lib/ai/clients/groq\";\r\nexport * from \"./lib/ai/utils/sse\";\r\n\r\nexport * from \"./components/ui/Button\";\r\nexport * from \"./components/ui/Card\";\r\n\r\nexport { ChatBox } from \"./components/ChatBox/ChatBox\";\r\nexport { Summarizer } from \"./components/Summarizer/Summarizer\";\r\nexport { Translator } from \"./components/Translator/Translator\";\r\nexport { Rewriter } from \"./components/Rewriter/Rewriter\";\r\n\r\nimport { ChatBox } from \"./components/ChatBox/ChatBox\";\r\nimport { Summarizer } from \"./components/Summarizer/Summarizer\";\r\nimport { Translator } from \"./components/Translator/Translator\";\r\nimport { Rewriter } from \"./components/Rewriter/Rewriter\";\r\nimport { useAI } from \"./lib/ai/useAI\";\r\n\r\nimport AIProvider from \"./lib/ai/AIProvider\";\r\n\r\nconst AIUI = { ChatBox, Summarizer, Translator, Rewriter, AIProvider, useAI };\r\nexport default AIUI;\r\n"],"mappings":"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","names":["useState","useState","jsx","clsx","jsx","useMemo","useState","clsx","jsx","useState","useMemo","useState","jsx","jsxs","useState","buildPrompt","useState","jsx","jsxs","useState","useMemo","useState","jsx","jsxs","buildPrompt","useState","useMemo"]}